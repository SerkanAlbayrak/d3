---
title: "YKS Puanı Hesaplama Formülleri-1: Modeller ve Tutulmayan Sözler"
author: Raif Serkan Albayrak
description: "Soru gruplarının puan hesaplanmasında katsayıları nedir? YKS çoğunlukla sıralamalarla ilgili olsa da analizlerin bir noktasında puanlarla ilgili bilgiye başvurulabiliyor. Örneğin bir bölüme yerleşen ortalama öğrenci bilgisi ATLAS'da netler üzerinden veriliyor. Bu bilgi bölüme yerleşen öğrencilerin sıralama dağılımlarının belirlenmesinde, farklı kontenjan (indirim) tiplerinden öğrenci alan bölümlere yerleşen ortalama öğrencinin belirlenmesinde ve bu sayede de bölüm bazında üniversite sıralamasında kullanılıyor."
date: 2022-05-31
categories:
  - YKS
  - Modelleme
  - R
  - Üniversite Analitiği
code-fold: true
image: "img/preview.png"
lang: tr
code-line-numbers: false
toc-title: İçerik
---

Bu yazıda farklı puan tipleri için soru bloklarının puan karşılığının nasıl hesaplandığı incelenmiştir. Örneğin SAY puan türünde, AYT sınavının Matematik bloğunda bir netin kaç puana denk geldiği bu yazıda açıklanan yöntemlerle bulunabilir. OSYM tarafından açıklanan dokümanlarda sınav puanlarının soru gruplarında elde edilen netlerin lineer bir fonksiyonu olduğu bilgisi verilmekte. Dolayısıyla kurulacak bir regresyon modeli sayesinde yuvarlama hataları dışında sınav puanı ile soru bloklarındaki netler arasında %100 açıklayıcılığa sahip modellerin elde edilebilmesi gerekmekte. Gerçekten de DİL puan türü dışında bu modeller bulunabildi. Ancak gene de bazı teknik sorunlarla da karşılaşıldı. Bazı bölümlere son sırada yerleşen öğrencilerin yaptığı netlerle açıklanan puanı arasında büyük tutarsızlıklar görüldü. Tutarsızlığın ne olduğu, bölümün ne olduğu, puanın ne olması gerekirken ne açıklandığı gösterildi.

Yazı iki bölümden oluşuyor. Birinci bölüm, puan hesaplama modellerinin anlatıldığı teknik kısım. İkinci bölüm ise bulgular üzerine bir tartışmayı, meta analizi içeriyor.

Geliştirilecek modeller, grafikler ve tablolar için ihtiyaç duyulan R kütüphaneleri yüklenerek başlanıyor.

```{r}
#| warnings: false
#| message: false
library(kableExtra)
library(readxl)
library(ggplot2)
library(dplyr)
library(jtools)
library(DT)
```

# Veri

Her puan türü[^1] için soru gruplarının çarpan değerini hesaplayabilmek için ATLAS'da yayınlanan [TYT-AYT Net Sihirbazında](https://yokatlas.yok.gov.tr/netler-tablo.php?b=19001) bulunan veriden faydalanılmıştır. Önlisans verisine de adreste [ufak bir değişiklikle](https://yokatlas.yok.gov.tr/netler-onlisans-tablo.php?b=30001) ulaşılmaktadır. Dikkat edilirse sayfada seçilen bölüm için kontenjan bazında son yerleşen öğrencinin netleri ve orta-öğretim başarı puanı (OBP) verilmekte ancak bu öğrencinin puanı verilmemektedir. Aslında sayfada bu bilgi de mevcuttur[^2] fakat ATLAS bu bilgiyi göstermemeyi tercih etmektedir.

[^1]: SAY, EA, SÖZ, DİL, TYT

[^2]: Tabloda görülmemesine rağmen aslında yüklenen sayfada puanların da bulunduğunu görmek için sayfanın kaynak koduna bakılabilir.

En güncel veri üzerinden çalışıldı ancak istenirse 2020 ve daha eski veriye de ulaşmak mümkündür[^3]. Bu sayfada bulunan tüm lisans ve önlisans bölüm isimlerine gene sayfanın kodu içinden ulaşmak mümkündür. Bölüm isimlerinin bulunduğu dosya [buradan](https://github.com/SerkanAlbayrak/d3/raw/master/content/posts/05_2022_yks_puan%20hesaplama/kodlar.xlsx) indirilebilir.

[^3]: <https://yokatlas.yok.gov.tr/2020/netler-tablo.php?b=19001>

```{r}

kodlar <- read_excel("kodlar.xlsx")
kodlar
```

Verinin ilk 480 satırı lisans gerisi onlisans bölümlerden oluşmakta. Her bölüm için adres çubuğundaki bölüm kodu değiştirilerek o bölümle ilgili tüm kontenjanlarda bulunan detaylara ulaşmak mümkündür. Basit bir döngü ve veri üzerinde her zamanki kadar zahmetli olan düzenlemeleri yaparak parametrelerin tahmininde kullanılan veri hazırlanmış olur. Ek olarak, puanlar hesaplanırken OBP katsayısının cezalı kullanılıp kullanılmadığını anlamak amacıyla her programın detay sayfasından yerleşen son öğrencinin Öğrenim durumu bilgisi de çekilip veriye eklenmiştir. Verinin hazır formu [buradan](https://github.com/SerkanAlbayrak/d3/raw/master/content/posts/05_2022_yks_puan%20hesaplama/puanData.xlsx) indirilebilir.

```{r}
all <- read_excel("puanData.xlsx")
all$PuanTuru <- as.factor(all$`PuanTuru`)
all
```

# Analiz

Her puan türü için geliştirilen modeller ilgili alt başlıklarda sunulmuştur.

## TYT Puanı

[YKS puanlama sisteminin](../05_2022_yks_puan_diagram/yks_puan_diagram.html) anlatıldığı daha önceki bir yazıda aşağıdaki diagram kullanılmıştı. Buna göre TYT Sınav puanı Temel Matematik, Türkçe, Fen Bilimleri ve Sosyal Bilimleri soru gruplarından toplanan puanlardan oluşur. Her soru grubunun etkisi farklıdır. Bazı soru gruplarından yapılan netler sonuçta hesaplanan puanı diğerlerinden daha fazla etkiler. İşte amaç soru gruplarının bu etkilerini tahmin etmektir. Bu amaçla basit bir regresyon modeli kurulmuştur.

![Puan Diagramı](puandiagram.png){#fig-puandiagram} Her soru grubunda bulunan soru sayısı aşağıdaki tabloda verilmiştir. Bu sayıların modelleme üzerinde bir etkisi yoktur ancak model sonuçlarının yorumlanmasında kullanılacaktır.

```{r}
SoruSayilari <- read_excel("SoruSayilari.xlsx")
SoruSayilari |> kbl(col.names = c("SINAV", "Soru Grubu", "Soru Sayısı"),booktabs = TRUE)
```

Regresyon modeli[^4] ile soru gruplarının sonuç puan üzerindeki etkisini gösteren **katsayılar** hesaplanacaktır. Modelin yapısı şu şekilde gösterilebilir:

[^4]: Regresyon modeli hemen her lisans programında gösterilen en temel istatistiki modeldir. Viki sayfası için [tıklayınız.](https://tr.wikipedia.org/wiki/Regresyon_analizi)

$$
TYTPuan=c+\beta_1 \cdot TemelMatematik+\beta_2 \cdot Türkçe+\beta_3 \cdot FenBilimleri+\beta_4 \cdot SosyalBilimler+\varepsilon
$$ Katsayılar hesaplanmadan önce verideki yerleştirme puanlarından OBP etkisinin ayıklanması gerekmekte. OBP etkisi öğrencinin mezun olduğu lise ile yerleştiği program arasında bir bağlantı olmasına göre 0.18 ile 0.12 değerlerinden birini alıyor.

$$
TYT_{Sınav} = TYT_{Yerleştirme}-(0.12\: veya\: 0.18)\cdot OBP
$$

```{r}
all$SinavPuan <- all$Puan-all$Katsayı*all$OBP
```

Regresyon modelinin katsayılarının hesaplanacağı veride modellemeye başlamadan önce yapılması gereken detay gibi görünen ama oldukça kritik bir filtreleme gerekmektedir. Eğer bir öğrenci YKS sınavında bir programa yerleşirse bir sonraki yıl OBP katsayısı yarı yarıya kesiliyor. Diğer bir deyişle YKS Yerleşme Puanını hesaplamak için, normalde OBP puanı 0.12 (veya 0.18) ile çarpılıp YKS sınav sonuç puan ekleneceğine 0.06 (veya 0.09) ile çarpılıp eklenmektedir. Dolayısıyla regresyon katsayılarının hesaplanacağı veride bu gibi durumların filtrelenmesi gerekmekte. Ne var ki, YÖK ATLAS bu konuda net bilgi içermemekte. Aşağıdaki grafikte $TYT_{Sınav}$ hesaplandıktan sonra yerleştirme ve sınav puanlarının çapraz grafiği gösterilmektedir. Açık renkli bölgeler 150 puanın altında kalan sınav puanlarını göstermektedir. Bu puanlar mümkün olmadığına göre[^5], bu programa son yerleşen adayların OBP katsayıları cezalı hesaplanmış olmalıdır.

[^5]: 2021 yılında 150 puan barajı uygulanmıştır.

```{r}
#| code-line-numbers: true

all$l50 <- ifelse(all$SinavPuan<150,150-all$SinavPuan,0)
ggplot(all, aes(x=Puan, y=SinavPuan, colour=l50))+geom_point() + 
  labs(title = "Yerleşme-Sınav Puanı",
       x = "Yerleşme Puanı",
       y = "Sınav Puanı",
       colour= "Hata") + 
  geom_abline(slope = 0, intercept = 0, colour="orange", size=1)

```

Mesela yukarıdaki grafikte 150 puan altında sınav puanlarına sahip öğrencilerin yerleştiği görünen programlara son sırada yerleşen öğrencilerin bilgilerine program detay sayfalarından da ulaşıldığında öğrencinin **Öğrenim Durumu** bilgisi aşağıdaki tablodaki gibi çıkıyor.

```{r}
#| code-line-numbers: true
#| warnings: false
#| message: false

table(all$stuType[all$l50>0]) |> kbl(col.names = c("Yerleşen Öğrencinin Öğrenim Durumu", "Frekans"))
```

150 puanın altındaki gözlemlerden elde edilen yukarıdaki tabloda **Liseden yeni mezun ÖSYSye ilk girişinde yerleşti** değerinin olmadığı görülmektedir. Dolayısıyla bu öğrenciler için OBP cezalı hesaplanmıştır. 

```{r}
table(all$stuType) |> kbl(col.names = c("Yerleşen Öğrencinin Öğrenim Durumu", "Frekans"))
```

OBP'nin puan üzerindeki etkisini kontrol altına alabilmek amacıyla verinin sadece **Liseden yeni mezun ÖSYSye ilk girişinde yerleşti** öğrenim durumuna sahip kısmı filtreleniyor.

```{r}
modeldata <- all[all$stuType=="Liseden yeni mezun ÖSYSye ilk girişinde yerleşti",]
```

Veriyi modele beslemeden önce son olarak TYT puanı ile yerleşim yapılan bölümler filtreleniyor.

```{r}
modeldataTYT <- modeldata[modeldata$PuanTuru=="TYT",]
```

Verinin TYT ile yerleştirme yapılan kısmı filtrelenerek katsayılar aşağıda kurulan model ile tahminleniyor. Model veriyi %99.9 oranda başarıyla açıklıyor.

```{r}
#| code-line-numbers: true
#| warnings: false
#| message: false


TYTModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`, data=modeldataTYT)
summ(TYTModel,digits = 5)
plot_summs(TYTModel)
```

### Hata Analizi

Her istatistiki model hata içerir ve bu hataların incelenmesi sonucu genellikle modelin iyileşmesine yönelik adımlar atılır. Burada hata ile kastedilen modelin tahmini ile gerçek puan arasındaki farklılıktır. Aşağıdaki garfikte iki gözlemdeki hatanın büyüklüğü dikkat çekmektedir.

```{r}
results <- data.frame(real = modeldataTYT$SinavPuan,model=predict(TYTModel))
results$fark <- results$real-results$model
results$absfark <- abs(results$real-results$model)
ggplot(results, aes(x=real, y=fark, colour=absfark))+geom_point() + 
  labs(title = "SAY Puanı Modelinde Hata Terimleri",
       x = "Gözlem",
       y = "Gözlem - Model",
       colour= "Hata") + 
  geom_abline(slope = 0, intercept = 0, colour="orange", size=1)
```

Hataların ekstrem olduğu bu gözlemler çekildiğinde Üsküdar Üniversitesi Çocuk Gelişimi Burslu kontenjanına ve Avrasya Üniversitesi Diş Protez Teknolojisi Burslu programına yerleşen öğrencilerin puanları olması gerekenden 7.45 ve 16.67 puan daha **fazla** hesaplanmış görünüyor. Umarız buradaki maddi hata ATLAS veri tabanındaki netlerdedir.

```{r}
h <- which(results$absfark>5)
t(modeldataTYT[h,-c(13:25,28,30)]) |> kbl()
```

Bu gözlemleri veriden çıkarıp model katsayıları tekrar hesaplanıyor. Artık modelde hata yok. Model veriyi %100 oranında açıklıyor. TYT sınavına giren öğrencilerin başarılarına göre standardize edilen soru gruplarının puan karşılıkları regresyon modelinin katsayıları olarak bulundu.

OSYM tarafından eklenen 100 puan çeşitli transformasyonlar sonucu 97.34'e düşmüştür. Her soru grubunun puanlamaya etkisi regresyon modelinin katsayılarında temsil edilmektedir. Buna göre en değerli sorular Matematik sorularıdır. Her matematik neti 4.53 puan anlamına gelmektedir. 2021 yılı için ikinci sırada en değerli puanların Fen Bilimleri soru grubunda olduğu görülmektedir. Bir fen bilimleri neti 3.18 puana denk gelmektedir. Türkçe ve Sosyal bilimler sorularının puanları yaklaşık olarak aynıdır. Grafikte soru gruplarının ağırlıkları görsel olarak ifade edilmiştir. Yıldan yıla bu katsayılar sınava katılan öğrencilerin performansına bağlı olarak değişmektedir. Bir soru grubunda Türkiye genelinde az başarılı olunursa bu soru grubunun değeri artmaktadır. Burada amaç öğrencileri birbirinden mümkün olduğunca ayırabilmektir.

```{r}
modeldataTYT1 <- modeldataTYT[-h,]
TYTModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`, data=modeldataTYT1)

summ(TYTModel,digits = 5)
plot_summs(TYTModel)

```

Yıldan yıla bu katsayılar sınava katılan öğrencilerin performansına bağlı olarak değişmektedir. Bir soru grubunda Türkiye genelinde az başarılı olunursa bu soru grubunun değeri artmaktadır. Standardizasyonun burada görevi öğrenciler arasındaki başarı farkını iyi bilinen istatistiki parametreler üzerinden ifade edebilme yeteneği vermesidir. Bu sayede puanlar belli değerler arasına taşınabilmektedir. Örneğin sınavda en başarı öğrenci soruların tamamını doğru yanıtlamış olmasa bile puanı 500'e taşınabilir.

```{r}
TYTKatsayilar <- read.csv("TYTKatsayilar.csv")
TYTKatsayilar |> kbl(col.names = c("Soru Grubu", "2019","2020","2021"),booktabs = TRUE) |> 
  kable_styling()
```


 

## SAY

SAYısal puanlarının da hesaplanmasında kullanılan katsayılar benzer şekilde bulunabilir. SAY puanın TYT puanı ve AYT'den Matematik, Fizik, Kimya ve Biyoloji sorularından oluştuğu biliniyor. Kurulan modelde herhangi bir belirsizlik bulunmuyor. Veri %100 başarıyla açıklanabiliyor. Modele göre AYT soru gruplarının puan üzerindeki etkisinin TYT'ye göre daha fazla olduğu görülmektedir. Bir önceki bölümde TYT puanı için hesaplanan katsayılar ile bu modeldeki TYT soru gruplarının katsayıları ilişkilidir. Örneğin TYT modelinde bir matematik sorusunun katsayısının türkçe sorusunun katsayısına oranı 4.53/2.92 hesaplandığıda 1.55 elde edilir. SAY puanı için oluşturulan modelde de aynı oran 1.76/1.13 hesabından bulunabilir. 

```{r}
modeldataSAY <- modeldata[modeldata$PuanTuru=="SAY",]
SAYModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`+
                 `AYT Mat`+`AYT Fizik`+`AYT Kimya` + `AYT Biyoloji`, data=modeldataSAY)
summ(SAYModel,digits = 5)
plot_summs(SAYModel)
```



## EA

EA puanı TYT sorularına ek olarak AYT'den Matematik, Türk Dili ve Edebiyatı, Tarih-1 ve Coğrafya-1 soru gruplarından oluşmaktadır.

```{r}
modeldataEA <- modeldata[modeldata$PuanTuru=="EA",]
EAModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`+
                 `AYT Mat`+`AYT Türkçe`+`AYT Tarih1` + `AYT Coğrafya1`, data=modeldataEA)
summ(EAModel,digits = 5)
plot_summs(EAModel)
```

Modelin açıklayıcılığının tam olarak %100 olmaması nedeniyle hatalara bakılıyor. Bir programda modelin hesapladığı ile gerçek puan arasında 5 puandan fazla fark olduğu görülüyor. Hesaplama hatası yapılan programın Uluslararası Saraybosna Üniversitesi %50 İndirimli Psikoloji olduğu görülüyor. Bu program için listelenen netler o puana denk gelmiyor, hesaplanmış olan puan, olması gerekenin 5 puandan fazla üstünde.

```{r}
results <- data.frame(real = modeldataEA$SinavPuan,model=predict(EAModel))
results$fark <- results$real-results$model
results$absfark <- abs(results$real-results$model)
ggplot(results, aes(x=real, y=fark, colour=absfark))+geom_point() + 
  labs(title = "EA Puanı Modelinde Hata Terimleri",
       x = "Gözlem",
       y = "Gözlem - Model",
       colour= "Hata") + 
  geom_abline(slope = 0, intercept = 0, colour="orange", size=1)
```

```{r}
h <- which(results$absfark>5)
t(modeldataEA[h,-c(14:16,20:25,28,30)]) |> kbl()
```

ÖSYM tarafından hesaplama hatası yapılan veya YÖK ATLAS sayfasında maddi hata yapılan program veriden çıkartılıp model tekrar kurulduğunda beklendiği gibi açıklayıcılık %100 oluyor.

```{r}
modeldataEA <- modeldata[modeldata$PuanTuru=="EA",]
modeldataEA <- modeldataEA[-h,]
EAModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`+
                 `AYT Mat`+`AYT Türkçe`+`AYT Tarih1` + `AYT Coğrafya1`, data=modeldataEA)
summ(EAModel,digits = 5)
plot_summs(EAModel)
```

## SÖZ

SÖZ puanı TYT sorularına ek olarak AYT'den Türk Dili ve Edebiyatı[^6], Tarih-1, Coğrafya-1, Tarih-2, Coğrafya-2, Felsefe ve DKAB soru gruplarından oluşmaktadır.

[^6]: YÖK ATLAS sayfasında EA puanı için bu soru grubu AYT Türkçe olarak nitelendirilmişken, SÖZ puan soru grubu için AYT TDE olarak kullanılıyor.

```{r}
modeldataSOZ <- modeldata[modeldata$PuanTuru=="SÖZ",]

SOZModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`+
                 `AYT TDE`+`AYT Tarih1` +`AYT Coğrafya1`+
                 `AYT Tar2`+`AYT Coğ2`+`AYT Fel`+`AYT Din`, data=modeldataSOZ)
summ(SOZModel,digits = 5)
plot_summs(SOZModel)
```

SÖZel puan türünde de bir programın puan hesaplamasında bir hata olduğu görülmekte. Hata yapılan program Tokat GaziOsmanPaşa Üniversitesi Sosyal Bilgiler Öğretmenliği programı. Yapılan hesaplama hatası 6 puanın üzerinde.

```{r}
results <- data.frame(real = modeldataSOZ$SinavPuan,model=predict(SOZModel))
results$fark <- results$real-results$model
results$absfark <- abs(results$real-results$model)
ggplot(results, aes(x=real, y=fark, colour=absfark))+geom_point() + 
  labs(title = "SÖZ Puanı Modelinde Hata Terimleri",
       x = "Gözlem",
       y = "Gözlem - Model",
       colour= "Hata") + 
  geom_abline(slope = 0, intercept = 0, colour="orange", size=1)
```

```{r}
h <- which(results$absfark>5)
t(modeldataSOZ[h,-c(13:17,25,28,30)]) |> kbl()
```

Daha önce de olduğu gibi modele zarar veren bu hatalı veri silinip model tekrar kurulduğunda açıklayıcılık %100 olmuştur.

```{r}
modeldataSOZ <- modeldata[modeldata$PuanTuru=="SÖZ",]
modeldataSOZ <- modeldataSOZ[-h,]
SOZModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`+
                 `AYT TDE`+`AYT Tarih1` +`AYT Coğrafya1`+
                 `AYT Tar2`+`AYT Coğ2`+`AYT Fel`+`AYT Din`, data=modeldataSOZ)
summ(SOZModel,digits = 5)
plot_summs(SOZModel)
```

## DİL

Dil puan türü TYT sınavına ek olarak Dil sınavında alınan netler üzerinden hesaplanır.

```{r}
modeldataDIL <- modeldata[modeldata$PuanTuru=="DİL",]

DILModel <- lm(SinavPuan~`TYT Mat`+`TYT Türkçe`+`TYT Fen`+`TYT Sosyal`+`YDT Dil`, data=modeldataDIL)
summ(DILModel,digits = 5)
plot_summs(DILModel)
```

İlk modelin açıklayıcılığı %100 olmadığı için hatalar inceleniyor. Sonuçta sadece bir iki programda değil hemen her programda modelin hesapladığı değer ile gerçek değer arasında sapma olduğu görülüyor.

```{r}
results <- data.frame(real = modeldataDIL$SinavPuan,model=predict(DILModel))
results$fark <- results$real-results$model
results$absfark <- abs(results$real-results$model)
ggplot(results, aes(x=real, y=fark, colour=absfark))+geom_point() + 
  labs(title = "DİL Puanı Modelinde Hata Terimleri",
       x = "Gözlem",
       y = "Gözlem - Model",
       colour= "Hata") + 
  geom_abline(slope = 0, intercept = 0, colour="orange", size=1)
```

Hatanın beşten büyük olduğu durumlar filtrelendiğinde ve bu programlar için detaylı çalışma yapıldığında hatanın kaynağına ulaşılamıyor.

```{r}
h <- which(results$absfark>5)
t(modeldataDIL[h,-c(13:24,28,30)]) |> kbl()
```

Dil modeliyle ilgili gözden kaçan bir durum olduğu açık. Yukarıda sunulan model eldekiler arasında mevcut veriyi en başarılı şekilde açıklayabilen modeldir.

# Sonuç ve Tartışma

Bu yazıda açıklanan yöntem kullanılarak hesaplanan 2019-2021 parametreleri aşağıda gösterilmiştir. Tabloda yerden kazanmak için virgülden sonra 2 basamak kullanıldı. Genel olarak bu parametrelerdeki değişim üzerine tartışma bir sonraki yazıda yapılmıştır. Ancak OSYM tarafından puan oluşumuyla ilgili açıklanan kısıtlara uyulup uyulmadığı kontrol edilmiştir.

```{r}
params <- read_excel("params.xlsx")
# kbl(params,digits = 2)
# kable(params,digits = 2)
datatable(params)
```

<br>
<br>

Örneğin, OSYM tarafından yapılan açıklamalarda[^7], TYT sınavının SAY, EA ve SÖZ puanlarının hesaplanmasında %40 ağırlığa sahip olduğu belirtilmiştir[^8]. Bu tarz açıklamalar adaylara oyunun kuralları daha en baştan belirtmesi açısından çok önemlidir. Bir lisans programına girmeyi hedefleyen bir öğrenci için TYT sınavının sınav puanı içinde %40 ağırlığa sahip olacağı bilgisi son derece önemlidir. Öğrenci SAY puan türünde bir bölümü hedeflese bile, TYT sınavında sorulan Sosyal sorularının AYT sınavındaki sözgelimi Biyoloji soruları kadar değerli olduğunu anlayacak ve hazırlığını buna göre yapacaktır. Bu anlamda oyunun kurallarını baştan belirlemek aslında tutulması gereken bir söz veya uyulması gereken bir kontrattır.

[^7]: YKS kataloğu Tablo 1C, 1D, 1E

[^8]: [YOK'ün konuyla ilgili resmi açıklaması için tıklayınız](https://www.yok.gov.tr/Documents/AnaSayfa/yuksekogretim_kurumlari_sinavi_sss_ve_cevaplari_puan_turleri_ile.pdf)


Tablodaki parametrelere bakarak TYT'nin 2019-2021 yılları arasında SAY puan türündeki oranı en az iki farklı şekilde hesaplanabilir. Birincisi; soruların tamamını doğru yanıtlayan bir aday için TYT sınavından elde edeceği puanın sabit katsayı ve OBP eklenmeden hesaplanan toplam puana, yani TYT+AYT sınavlarından elde edilen puana oranı %40 olmalıdır. İkincisi ise soru grupları bazında ortalama netler üzerinden TYT sınavından elde edilen puan hesaplandığında bu puanının TYT+AYT sınavından elde edilen toplam puana oranı %40 olmalıdır.

### Birinci Yöntem
Birinci yöntem kullanılarak 2021 yılı için hesaplamalar yapıldığında EA ve SÖZ puan türü için oranın olması gerekenden bir miktar saptığı görülüyor.

```{r}

d2021 <- data.frame(Sınav=c("TYT","AYT","Toplam"), 
                    SAY=c(sum(params$`Soru Sayısı`[1:4]*params$SAY2021[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$SAY2021[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$SAY2021[1:15])),
                    EA=c(sum(params$`Soru Sayısı`[1:4]*params$EA2021[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$EA2021[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$EA2021[1:15])),
                    SOZ=c(sum(params$`Soru Sayısı`[1:4]*params$SÖZ2021[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$SÖZ2021[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$SÖZ2021[1:15])))
d2021[4,] <- c("TYT Oranı",d2021$SAY[1]/d2021$SAY[3],d2021$EA[1]/d2021$EA[3],
               d2021$SOZ[1]/d2021$SOZ[3])
d2021$SAY <- as.numeric(d2021$SAY)
d2021$EA <- as.numeric(d2021$EA)
d2021$SOZ <- as.numeric(d2021$SOZ)
print(d2021, digits = 3)

```

Yuvarlama hatasına bağlanabilir mi? Bunu görebilmek için 2020 verisinde aynı hesaplamalar tekrarlandı. Hayır, sapmanın nedeni yuvarlama nedeniyle bilgi kaybı değil. 2020 yılında SAY ve EA puan türünde TYT sınavının ağırlığı önceden açıklanandan sırasıyla %2.75 ve %2 daha fazla. SÖZ puan türündeyse %0.5 daha az. Bu sapmalar çok ufak puan dilimlerine sıkışan binlerce öğrenci olduğu düşünüldüğünde göz ardı edilemeyecek kadar ciddidir.

```{r}
d2020 <- data.frame(Sınav=c("TYT","AYT","Toplam"), 
                    SAY=c(sum(params$`Soru Sayısı`[1:4]*params$SAY2020[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$SAY2020[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$SAY2020[1:15])),
                    EA=c(sum(params$`Soru Sayısı`[1:4]*params$EA2020[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$EA2020[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$EA2020[1:15])),
                    SOZ=c(sum(params$`Soru Sayısı`[1:4]*params$SÖZ2020[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$SÖZ2020[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$SÖZ2020[1:15])))
d2020[4,] <- c("TYT Oranı",d2020$SAY[1]/d2020$SAY[3],d2020$EA[1]/d2020$EA[3],
               d2020$SOZ[1]/d2020$SOZ[3])
d2020$SAY <- as.numeric(d2020$SAY)
d2020$EA <- as.numeric(d2020$EA)
d2020$SOZ <- as.numeric(d2020$SOZ)
print(d2020, digits = 3)
```

Bu bilgiler ışığında 2019 verisi de incelendi.

```{r}
d2019 <- data.frame(Sınav=c("TYT","AYT","Toplam"), 
                    SAY=c(sum(params$`Soru Sayısı`[1:4]*params$SAY2019[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$SAY2019[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$SAY2019[1:15])),
                    EA=c(sum(params$`Soru Sayısı`[1:4]*params$EA2019[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$EA2019[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$EA2019[1:15])),
                    SOZ=c(sum(params$`Soru Sayısı`[1:4]*params$SÖZ2019[1:4]),
                          sum(params$`Soru Sayısı`[5:15]*params$SÖZ2019[5:15]),
                          sum(params$`Soru Sayısı`[1:15]*params$SÖZ2019[1:15])))
d2019[4,] <- c("TYT Oranı",d2019$SAY[1]/d2019$SAY[3],d2019$EA[1]/d2019$EA[3],
               d2019$SOZ[1]/d2019$SOZ[3])
d2019$SAY <- as.numeric(d2019$SAY)
d2019$EA <- as.numeric(d2019$EA)
d2019$SOZ <- as.numeric(d2019$SOZ)
print(d2019, digits = 3)
```

Yukarıdaki tablodaki sonuçlara göre birinci yöntem uygulanmış olamaz. Çünkü aksi durumda ÖSYM adaylara verdiği taahütü yerine getirmemiş, oyunun kurallarını oyunun sonunda değiştirmiş olduğu anlamına gelir.

### İkinci Yöntem

İkinci yöntemi uygulayabilmek için her soru grubu için ortalama net bilgisine ihtiyaç duyulmaktadır. ÖSYM bu bilgiyi sınav sonuçlarını açıkladığı güm Sayısal Veriler adıyla yayınlar. Örneğin 2021 için Sayısal Veriler dosyasına [buradan](https://dokuman.osym.gov.tr/pdfdokuman/2021/YKS/sayisal_veriler_28072021.pdf) ulaşılabilir. Ortalamalar tablosu dokümanın dördüncü sayfasında bulunmaktadır. Aşağıda bu tablonun ilgili kısmı verilmiştir.

```{r}
ort21 <- read_excel("sayisal_veriler21.xlsx")
datatable(ort21)
```

Ortalama bilgisi daha önce hazırlanmış olan `params` verisiyle birleştiriliyor ve TYT sınavının genel içindeki ağırlığı hesaplanıyor. Bu sonuçlara göre ÖSYM'nin uyguladığı yöntem her ne ise ortalama öğrenci için TYT sınavının toplam puan içindeki ağırlığını %40'a sabitlemediği kesin. Hatta bu sonuçlar kendi içinde başlı başına tartışma konusu. Hesaplamalara göre ortalama bir SAY öğrencisi için TYT'nin sınav puanı içindeki etkisi %56.8! Bu en başta bahsedilen değere göre müthiş bir sapma. EA ve SÖZ puan türleri için de sapma oldukça fazla.

```{r}
params$ortalama <- c(ort21$Ortalama[c(3,1,4,2,12:15,5:11)],NA,NA)
e2021 <- data.frame(Sınav=c("TYT","AYT","Toplam"), 
                    SAY=c(sum(params$ortalama[1:4]*params$SAY2021[1:4]),
                          sum(params$ortalama[5:15]*params$SAY2021[5:15]),
                          sum(params$ortalama[1:15]*params$SAY2021[1:15])),
                    EA=c(sum(params$ortalama[1:4]*params$EA2021[1:4]),
                          sum(params$ortalama[5:15]*params$EA2021[5:15]),
                          sum(params$ortalama[1:15]*params$EA2021[1:15])),
                    SOZ=c(sum(params$ortalama[1:4]*params$SÖZ2021[1:4]),
                          sum(params$ortalama[5:15]*params$SÖZ2021[5:15]),
                          sum(params$ortalama[1:15]*params$SÖZ2021[1:15])))
e2021[4,] <- c("TYT Oranı",e2021$SAY[1]/e2021$SAY[3],e2021$EA[1]/e2021$EA[3],
               e2021$SOZ[1]/e2021$SOZ[3])
e2021$SAY <- as.numeric(e2021$SAY)
e2021$EA <- as.numeric(e2021$EA)
e2021$SOZ <- as.numeric(e2021$SOZ)
print(e2021, digits = 3)
```

Fazlasıyla uzayan bu yazı, TYT'nin sınav puanı içindeki %40 ağırlığını gösteremeden sona ermek durumunda. ÖSYM'nin kullanmış olabileceği iki yöntemi de kullanarak yapılan hesaplamalar TYT'nin genel puan içindeki ağırlığına dair bilgiyi onaylayamıyor. YKS her yıl iki milyondan fazla öğrencinin kaderini ilgilendiren bir sınavdır. ÖSYM öğrencilerin sınava hazırlanmalarında belki de en temel bilgi olarak kullanacakları; sınavın nasıl değerlendirileceğine yönelik bir bilgiyi her yıl paylaşıyor. Ancak sonuçlar açıklandığında bu bilginin hatalı olduğu ortaya çıkıyor. Daha doğrusu, söz yerine getirilmiyor.     

Yazının ikinci bölümünde parametrelerin yıllar içinde değişiminin etkileri ve puan hesabını yapabilmenin üniversite analitiği üzerine tartışıldı.
